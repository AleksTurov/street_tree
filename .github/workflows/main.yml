name: Docker CI/CD

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Install Docker Compose
      run: |
        sudo apt-get update
        sudo apt-get install docker-compose -y

    - name: Build Docker image
      run: |
        docker build -t ${{ secrets.DOCKER_USERNAME }}/my-image:${{ github.sha }} .

    - name: Push Docker image
      run: |
        docker push ${{ secrets.DOCKER_USERNAME }}/my-image:${{ github.sha }}

    - name: Set environment variables
      run: |
        echo "DOCKER_IMAGE=${{ secrets.DOCKER_USERNAME }}/my-image:${{ github.sha }}" >> $GITHUB_ENV

    - name: Stop previous Docker Compose
      run: docker-compose down || true

    - name: Start Docker Compose
      run: docker-compose up -d

    - name: Wait for API to be available
      run: sleep 10

    - name: Install Localtunnel
      run: npm install -g localtunnel

    - name: Run Localtunnel
      id: localtunnel
      run: |
        lt --port 8000 --subdomain my-custom-subdomain > localtunnel_url.txt &
        sleep 5
        LT_URL=$(sed 's/your url is: //g' localtunnel_url.txt)
        echo "LT_URL=${LT_URL}" >> $GITHUB_ENV

    - name: Get LocalTunnel Password
      run: |
        curl https://loca.lt/mytunnelpassword > tunnel_password.txt
        TUNNEL_PASSWORD=$(cat tunnel_password.txt)
        echo "TUNNEL_PASSWORD=${TUNNEL_PASSWORD}" >> $GITHUB_ENV

    - name: Output Swagger UI URL
      run: |
        echo "Swagger UI URL: ${{ env.LT_URL }}/docs"
        echo "LocalTunnel Password: ${{ env.TUNNEL_PASSWORD }}"
