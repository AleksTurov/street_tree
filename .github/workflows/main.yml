name: Docker CI/CD

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Install Docker Compose
      run: |
        sudo apt-get update
        sudo apt-get install docker-compose -y

    - name: Build Docker image
      run: |
        docker build -t ${{ secrets.DOCKER_USERNAME }}/my-image:${{ github.sha }} .

    - name: Push Docker image
      run: |
        docker push ${{ secrets.DOCKER_USERNAME }}/my-image:${{ github.sha }}

    - name: Stop previous Docker Compose
      run: docker-compose down || true

    - name: Set environment variables
      run: |
        echo "DOCKER_IMAGE=${{ secrets.DOCKER_USERNAME }}/my-image:${{ github.sha }}" >> $GITHUB_ENV

    - name: Start Docker Compose
      run: docker-compose up -d

    - name: Wait for API to be available
      run: sleep 10

    - name: Download and Install ngrok
      run: |
        wget https://bin.equinox.io/c/4VmDzA7iaHb/ngrok-stable-linux-amd64.zip
        unzip ngrok-stable-linux-amd64.zip
        sudo mv ngrok /usr/local/bin
        sudo chmod +x /usr/local/bin/ngrok

    - name: Configure ngrok
      run: |
        /usr/local/bin/ngrok authtoken ${{ secrets.NGROK_AUTH_TOKEN }}

    - name: Run ngrok
      run: |
        /usr/local/bin/ngrok http 8000 &
        sleep 5
        curl http://localhost:4040/api/tunnels

    - name: Get ngrok URL
      id: ngrok
      run: |
        sleep 5
        NGROK_URL=$(curl -s localhost:4040/api/tunnels | jq -r '.tunnels[0].public_url')
        echo "::set-output name=url::$NGROK_URL"
        echo "NGROK_URL: $NGROK_URL"

    - name: Output Swagger UI URL
      run: |
        echo "Swagger UI URL: ${{ steps.ngrok.outputs.url }}/docs"